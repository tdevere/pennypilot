name: Project Automation

on:
  issues:
    types: [opened, labeled, assigned]
  pull_request:
    types: [opened, ready_for_review, closed]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: Label Roadmap Items
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            const body = issue.body || '';
            
            const labels = [];
            
            // Auto-detect priority
            if (body.includes('priority: critical') || title.includes('[critical]')) {
              labels.push('priority: critical');
            } else if (body.includes('priority: high') || title.includes('[bug]')) {
              labels.push('priority: high');
            } else if (body.includes('priority: low')) {
              labels.push('priority: low');
            } else {
              labels.push('priority: medium');
            }
            
            // Auto-detect milestone
            if (body.includes('milestone: mvp') || body.includes('Milestone 1')) {
              labels.push('milestone: mvp');
            } else if (body.includes('Milestone 2')) {
              labels.push('milestone: v1.0');
            }
            
            // Auto-detect type
            if (title.includes('[feature]') || body.includes('type: feature')) {
              labels.push('type: feature');
            } else if (title.includes('[bug]') || body.includes('type: bug')) {
              labels.push('type: bug');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }

  auto-assign-milestone:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'labeled'
    steps:
      - name: Assign to Milestone
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const label = context.payload.label;
            
            let milestoneTitle = null;
            
            if (label.name === 'milestone: mvp') {
              milestoneTitle = 'MVP Core Features';
            } else if (label.name === 'milestone: v1.0') {
              milestoneTitle = 'Essential User Features';
            }
            
            if (milestoneTitle) {
              const milestones = await github.rest.issues.listMilestones({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open'
              });
              
              const milestone = milestones.data.find(m => m.title === milestoneTitle);
              
              if (milestone) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  milestone: milestone.number
                });
              }
            }

  comment-on-assignment:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'assigned'
    steps:
      - name: Welcome Comment
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const assignee = context.payload.assignee;
            
            const comment = `ðŸ‘‹ Thanks for taking on this issue, @${assignee.login}!
            
            **Getting Started:**
            1. Create a feature branch: \`git checkout -b feature/${issue.number}-${issue.title.toLowerCase().replace(/[^a-z0-9]/g, '-')}\`
            2. Review the [ROADMAP.md](../blob/main/ROADMAP.md) for context
            3. Check [Contributing Guidelines](../blob/main/CONTRIBUTING.md)
            4. Add tests for any new functionality
            
            **Need Help?**
            - Comment here with questions
            - Tag other contributors with @mention
            - Check existing PRs for reference
            
            Good luck! ðŸš€`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: comment
            });

  auto-close-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Close Linked Issues
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Extract issue numbers from PR body
            const issueRegex = /(?:close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s+#(\d+)/gi;
            let match;
            
            while ((match = issueRegex.exec(body)) !== null) {
              const issueNumber = parseInt(match[1]);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `âœ… Completed in PR #${pr.number}`
              });
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                state: 'closed'
              });
            }

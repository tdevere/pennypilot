name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run TypeScript type check
        run: npm run type-check
        continue-on-error: true
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Run Prettier check
        run: npm run format:check
        continue-on-error: true
      
      - name: Run tests with coverage
        run: npm run test:ci
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-pennypilot
        continue-on-error: true
      
      - name: Comment PR with coverage
        if: github.event_name == 'pull_request' && hashFiles('coverage/coverage-summary.json') != ''
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              
              const comment = `## üìä Test Coverage Report
              
              | Category | Coverage |
              |----------|----------|
              | Lines | ${total.lines.pct}% |
              | Statements | ${total.statements.pct}% |
              | Functions | ${total.functions.pct}% |
              | Branches | ${total.branches.pct}% |
              
              ${total.lines.pct >= 70 ? '‚úÖ' : '‚ö†Ô∏è'} Coverage threshold: 70%
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Coverage file not found, skipping comment');
            }
        continue-on-error: true
      
      - name: Check for security vulnerabilities
        run: npm audit --audit-level=moderate
        continue-on-error: true

  build-ios:
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build iOS app
        run: npx eas-cli build --platform ios --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build-android:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Android app
        run: npx eas-cli build --platform android --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  notify-on-failure:
    runs-on: ubuntu-latest
    if: failure()
    needs: [lint-and-test, build-ios, build-android]
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '‚ùå Build failed! Please check the logs and fix any errors.'
            });
